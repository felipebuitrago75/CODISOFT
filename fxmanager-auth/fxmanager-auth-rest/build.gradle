buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "se.transmode.gradle:gradle-docker:1.2"
	}
}

apply plugin: 'java'
apply plugin: 'docker'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "maven-publish"

group = 'co.com.smartcode'
version = '0.0.1-SNAPSHOT'
jar.enabled = true  
sourceCompatibility = 11

repositories {
	mavenLocal()
    jcenter()
}


dependencies {
	implementation project(':fxmanager-auth-domain')
	implementation project(':fxmanager-auth-core')	
	implementation project(':fxmanager-auth-persistence')	
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.javassist:javassist:3.23.1-GA')
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE')
	compile('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.reactivestreams:reactive-streams-flow-adapters:1.0.2')
	runtime('com.h2database:h2')
	compile 'mysql:mysql-connector-java'
	runtime('javax.xml.bind:jaxb-api:2.3.0')
	compile('javax.activation:activation:1.1')
	compile('com.sun.xml.bind:jaxb-impl:2.3.1')
	compile('com.sun.xml.bind:jaxb-core:2.3.0.1')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile("org.junit.jupiter:junit-jupiter-api:5.1.0") 
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.1.0")
}



task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}
/*
task buildDocker(type: Docker, dependsOn: build){
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

build.finalizedBy(buildDocker)
*/
